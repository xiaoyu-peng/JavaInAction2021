spring:
  kafka:
    ###########【Kafka集群】###########
    bootstrap-servers: 192.168.31.185:9092,192.168.31.186:9092,192.168.31.187:9092 #服务器的ip及端口，可以写多个，服务器之间用“：”间隔
    ###########【初始化生产者配置】###########
    producer:
      # 重试次数
      retries: 0
      # 应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)
      acks: 1
      # Kafka提供的序列化和反序列化类
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 批量大小
      batch-size: 16384
      # 提交延时 当生产端积累的消息达到batch-size或接收到消息linger.ms后,生产者就会将消息提交给kafka；linger.ms为0表示每接收到一条消息就提交给kafka,这时候batch-size其实就没用了
      properties:
        linger:
          ms: 0
        partitioner：
          class：com.felix.kafka.producer.CustomizePartitioner
      # 生产者缓冲区大小
      buffer-memory: 33554432
    # 自定义分区器
    # spring.kafka.producer.properties.partitioner.class=com.felix.kafka.producer.CustomizePartitioner

    #消费者配置
    consumer:
      group-id: test #设置消费者的组id
      enable-auto-commit: true
      auto-commit-interval: 1000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer